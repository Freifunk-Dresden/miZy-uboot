#!/bin/sh

## hyphop ##

. ./,config

[ -f $src/._PREPARED_ ] && {
    echo "[i] prepared already!!!

NEXT:
    ./uboot_build
" 1>&2;

    exit 0
}

[ -d $logs ] || mkdir $logs
[ -d ../bin/uboot ] || mkdir -p ../bin/uboot
[ -d ,tmp ] || mkdir -p ,tmp
[ -s $src/Makefile ] || {
# prefer squashfs source
    [ -s $squash_src ] || {
	cmd="wget $squash_src_link -O ../$squash_src_name"
	echo $cmd
	$cmd
    }

    [ -s $squash_src ] && {
	echo "mount squash & overlay"
	./mount_overlay_squash || echo "overlay method failed, trying another way..."
    }
}

#exit;

[ -s $src/Makefile ] || {
    echo "empty source dir"
    a=uboot.tar.xz
    [ -s $a ] && {
	echo "unpack source $a"
	tar -xf $a
	rm uboot-mizy
	mv uboot uboot-mizy
    }
}



[ -s $src/Makefile ] || { 
    git clone --depth 1 -b v2017.01 https://github.com/RobertCNelson/u-boot $src
    rm -rd $src/.git
}

#exit

[ -x $dtc/dtc ] || ./dtc_prepare_make


arm-openwrt-linux-gcc --version 2>/dev/null 1>/dev/null || {

    [ -s ../$tc_gcc_squash ] || {
	cmd="wget $squash_tc_link -O ../$squash_tc_name"
	echo $cmd
	$cmd
	#exit 0
    }

    [ -s ../$tc_gcc_squash ] && {
	[ -d ../$tc_gcc_dir ] || mkdir ../$tc_gcc_dir
	cmd="mount -o ro ../$tc_gcc_squash ../$tc_gcc_dir"
	echo $cmd
	$cmd
    }

#    [ -s $tc_gcc.tar.bz2 ] ||  wget $tc_src
#    tar -xf $tc_gcc.tar.bz2
#    ln -s $tc_gcc/$tc_gcc_dir $tc_gcc_dir
}

cd $bdir

#exit;

#ls -l1 $patches/

cd $src
cat ../$patches/*.patch | patch -p1
rm configs/*
cp -a ../$add/* .
cd ..

./uboot_defconfig && {
    echo 1 > $src/._PREPARED_
    echo "[i] ok source is prepared

NEXT:
    ./uboot_build
"
}

